version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: nodejs_app
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=secret
      - DB_NAME=nodejs
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    networks:
      - app_network
    restart: unless-stopped

  mysql:
    image: mysql:8
    container_name: nodejs_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=nodejs
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    container_name: nodejs_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local 